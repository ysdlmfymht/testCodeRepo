{"name": "test_demo1", "status": "failed", "statusDetails": {"message": "AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code", "trace": "self = <api.api_test.TestProject object at 0x000002177A09EA50>\n\n    @allure.story(\"搜索测试\")\n    def test_demo1(self):\n        url = \"https://search.douban.com/movie/subject_search\"\n        headers = {\n            \"accept\":\n                \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,\"\n                \"application/signed-exchange;v=b3;q=0.7\",\n            \"accept-encoding\":\n                \"gzip, deflate, br, zstd\",\n            \"accept-language\":\n                \"zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\",\n            \"user-agent\":\n                \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 \"\n                \"Safari/537.36 Edg/134.0.0.0\"\n        }\n        params = dict(search_text=u'刘德华')\n        response = requests.get(url, params=params, headers=headers)\n        # print(\"status_code:\", response.status_code)\n>       assert response.status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\napi\\api_test.py:30: AssertionError"}, "start": 1743659499258, "stop": 1743659499564, "uuid": "7d18b699-cfe5-49b5-ae0a-590bc0de7a4f", "historyId": "81be15b73e7c032a8baedb7cae968903", "testCaseId": "81be15b73e7c032a8baedb7cae968903", "fullName": "api.api_test.TestProject#test_demo1", "labels": [{"name": "feature", "value": "测试功能1"}, {"name": "story", "value": "搜索测试"}, {"name": "epic", "value": "testDemoProject"}, {"name": "parentSuite", "value": "api"}, {"name": "suite", "value": "api_test"}, {"name": "subSuite", "value": "TestProject"}, {"name": "host", "value": "DESKTOP-GDLCG1T"}, {"name": "thread", "value": "5816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "api.api_test"}], "links": [{"type": "issue"}, {"type": "tms"}]}