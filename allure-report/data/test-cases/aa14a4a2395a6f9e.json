{"uid":"aa14a4a2395a6f9e","name":"test_demo1","fullName":"api.api_test.TestProject#test_demo1","historyId":"81be15b73e7c032a8baedb7cae968903","time":{"start":1743659499258,"stop":1743659499564,"duration":306},"status":"failed","statusMessage":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","statusTrace":"self = <api.api_test.TestProject object at 0x000002177A09EA50>\n\n    @allure.story(\"搜索测试\")\n    def test_demo1(self):\n        url = \"https://search.douban.com/movie/subject_search\"\n        headers = {\n            \"accept\":\n                \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,\"\n                \"application/signed-exchange;v=b3;q=0.7\",\n            \"accept-encoding\":\n                \"gzip, deflate, br, zstd\",\n            \"accept-language\":\n                \"zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\",\n            \"user-agent\":\n                \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 \"\n                \"Safari/537.36 Edg/134.0.0.0\"\n        }\n        params = dict(search_text=u'刘德华')\n        response = requests.get(url, params=params, headers=headers)\n        # print(\"status_code:\", response.status_code)\n>       assert response.status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\napi\\api_test.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"测试功能1"},{"name":"story","value":"搜索测试"},{"name":"epic","value":"testDemoProject"},{"name":"parentSuite","value":"api"},{"name":"suite","value":"api_test"},{"name":"subSuite","value":"TestProject"},{"name":"host","value":"DESKTOP-GDLCG1T"},{"name":"thread","value":"5816-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"api.api_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"type":"issue"},{"type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8063229235c6895d","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1743645755419,"stop":1743645755744,"duration":325}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"1a614ff872cf0045","reportUrl":"http://localhost:8080/job/test1/15/allure/#testresult/1a614ff872cf0045","status":"failed","statusDetails":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","time":{"start":1743645755419,"stop":1743645755744,"duration":325}},{"uid":"374834b7254962a4","reportUrl":"http://localhost:8080/job/test1/14/allure/#testresult/374834b7254962a4","status":"passed","time":{"start":1743385046080,"stop":1743385046752,"duration":672}},{"uid":"834b56542da28470","reportUrl":"http://localhost:8080/job/test1/13/allure/#testresult/834b56542da28470","status":"passed","time":{"start":1743156957633,"stop":1743156958221,"duration":588}},{"uid":"b0f9184bd12fd815","reportUrl":"http://localhost:8080/job/test1/10/allure/#testresult/b0f9184bd12fd815","status":"passed","time":{"start":1743156641301,"stop":1743156641944,"duration":643}},{"uid":"e7b337ac1113cfb9","reportUrl":"http://localhost:8080/job/test1/9/allure/#testresult/e7b337ac1113cfb9","status":"passed","time":{"start":1743155767302,"stop":1743155767913,"duration":611}}]},"tags":[]},"source":"aa14a4a2395a6f9e.json","parameterValues":[]}